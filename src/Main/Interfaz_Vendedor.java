/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.util.Calendar;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emile
 */
public class Interfaz_Vendedor extends javax.swing.JFrame {
    
    private ConexionDB db = new ConexionDB();

    /**
     * Creates new form Interfaz_Vendedor
     */
    public Interfaz_Vendedor() {
        db.conectar();
        initComponents();
        try{
            cinco_mejores_tiendas();
            ActualizarCB(CB_Inventario, db.getConexion().prepareStatement("SELECT id,nombre FROM tiendas"));
            ActualizarCB(CB_ComprasCliente, db.getConexion().prepareStatement("SELECT id,nombre FROM clientes"));
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JD_Crear_Cliente = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        BT_Crear_CC = new javax.swing.JButton();
        CB_Producto_AP = new javax.swing.JComboBox<>();
        jSpinner1 = new javax.swing.JSpinner();
        JD_Crear_Cliente_BG = new javax.swing.JLabel();
        TB_Carrito_Scrollpane = new javax.swing.JScrollPane();
        TB_Carrito = new javax.swing.JTable();
        jLabel46 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        BT_EliminarProducto = new javax.swing.JButton();
        CB_Cliente = new javax.swing.JComboBox<>();
        BT_RealizarVenta = new javax.swing.JButton();
        BT_AgregarProducto = new javax.swing.JButton();
        JL_Total = new javax.swing.JLabel();
        JL_ISV = new javax.swing.JLabel();
        JL_Subtotal = new javax.swing.JLabel();

        JD_Crear_Cliente.setResizable(false);
        JD_Crear_Cliente.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Agregar Producto");
        JD_Crear_Cliente.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 600, -1));

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel6.setText("Cantidad");
        JD_Crear_Cliente.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, -1, 20));

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel7.setText("Producto");
        JD_Crear_Cliente.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, -1, 20));

        BT_Crear_CC.setText("Agregar");
        BT_Crear_CC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BT_Crear_CC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BT_Crear_CCMousePressed(evt);
            }
        });
        JD_Crear_Cliente.getContentPane().add(BT_Crear_CC, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 110, -1));

        CB_Producto_AP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JD_Crear_Cliente.getContentPane().add(CB_Producto_AP, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 230, -1));
        JD_Crear_Cliente.getContentPane().add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, -1, -1));

        JD_Crear_Cliente_BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/JD_Crear_BG.png"))); // NOI18N
        JD_Crear_Cliente.getContentPane().add(JD_Crear_Cliente_BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 300));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(90, 50));
        setMinimumSize(new java.awt.Dimension(1447, 830));
        setResizable(false);
        setSize(new java.awt.Dimension(1447, 830));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TB_Carrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "âœ“", "UPC", "Producto", "Cantidad", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TB_Carrito.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        TB_Carrito.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TB_Carrito.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TB_Carrito.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TB_Carrito.setShowGrid(true);
        TB_Carrito.getTableHeader().setReorderingAllowed(false);
        TB_Carrito.setUpdateSelectionOnSort(false);
        TB_Carrito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TB_CarritoMouseReleased(evt);
            }
        });
        TB_Carrito_Scrollpane.setViewportView(TB_Carrito);
        if (TB_Carrito.getColumnModel().getColumnCount() > 0) {
            TB_Carrito.getColumnModel().getColumn(0).setResizable(false);
            TB_Carrito.getColumnModel().getColumn(1).setResizable(false);
            TB_Carrito.getColumnModel().getColumn(2).setResizable(false);
            TB_Carrito.getColumnModel().getColumn(3).setResizable(false);
            TB_Carrito.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(TB_Carrito_Scrollpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 930, 580));

        jLabel46.setBackground(new java.awt.Color(61, 72, 74));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("Carrito");
        jLabel46.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        jLabel46.setOpaque(true);
        getContentPane().add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 930, 20));

        jLabel1.setText("Cliente a venderle");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 480, -1, 30));

        jLabel2.setText("Total: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 770, 50, 20));

        jLabel3.setText("ISV: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 710, 40, 20));

        jLabel5.setText("Subtotal: ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 740, 70, 20));

        BT_EliminarProducto.setBackground(new java.awt.Color(99, 32, 39));
        BT_EliminarProducto.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        BT_EliminarProducto.setText("Eliminar Productos");
        BT_EliminarProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BT_EliminarProducto.setEnabled(false);
        getContentPane().add(BT_EliminarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 290, 270, 60));

        CB_Cliente.setBackground(new java.awt.Color(40, 71, 71));
        CB_Cliente.setBorder(null);
        getContentPane().add(CB_Cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 480, 210, 30));

        BT_RealizarVenta.setBackground(new java.awt.Color(186, 158, 48));
        BT_RealizarVenta.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        BT_RealizarVenta.setForeground(new java.awt.Color(58, 58, 58));
        BT_RealizarVenta.setText("Realizar Venta");
        BT_RealizarVenta.setBorderPainted(false);
        BT_RealizarVenta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(BT_RealizarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 380, 270, 60));

        BT_AgregarProducto.setBackground(new java.awt.Color(29, 91, 49));
        BT_AgregarProducto.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        BT_AgregarProducto.setText("Agregar Producto");
        BT_AgregarProducto.setBorderPainted(false);
        BT_AgregarProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(BT_AgregarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 200, 270, 60));

        JL_Total.setBackground(new java.awt.Color(51, 51, 51));
        JL_Total.setText("0.00");
        JL_Total.setOpaque(true);
        getContentPane().add(JL_Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 770, 100, 20));

        JL_ISV.setBackground(new java.awt.Color(51, 51, 51));
        JL_ISV.setText("0.00");
        JL_ISV.setOpaque(true);
        getContentPane().add(JL_ISV, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 710, 100, 20));

        JL_Subtotal.setBackground(new java.awt.Color(51, 51, 51));
        JL_Subtotal.setText("0.00");
        JL_Subtotal.setOpaque(true);
        getContentPane().add(JL_Subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 740, 100, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BT_Crear_CCMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BT_Crear_CCMousePressed
        try{
            if(TF_Nombre_CC.getText().isBlank() || TF_Nombre_CC.getText().isEmpty()){
                JOptionPane.showMessageDialog(JD_Crear_Cliente, "Ingrese nombre a la Tienda");
                throw new Exception();
            }
            PreparedStatement ps = db.getConexion().prepareStatement("SELECT insert_cliente(?,?)");
            ps.setString(1, TF_Nombre_CC.getText());
            ps.setString(2, TF_Correo_CC.getText());
            ps.executeQuery();
            TF_Nombre_CC.setText("");
            TF_Correo_CC.setText("");
            JOptionPane.showMessageDialog(JD_Crear_Cliente, "Cliente creado!", 
                    "Existoso", JOptionPane.INFORMATION_MESSAGE);
            ActualizarCB(CB_ComprasCliente, db.getConexion().prepareStatement("SELECT id,nombre FROM clientes"));
        }catch(Exception e){
            e.printStackTrace();
        }        
    }//GEN-LAST:event_BT_Crear_CCMousePressed

    private void TB_CarritoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TB_CarritoMouseReleased
        boolean Marcado = false;

        for (int i = 0; i < TB_Carrito.getRowCount(); i++) {
            if(TB_Carrito.getValueAt(i, 0) != null && (boolean)TB_Carrito.getValueAt(i, 0) == true){
                Marcado = true;
            }
        }

        if(Marcado == true){
            BT_EliminarProducto.setEnabled(true);
        }else{
            BT_EliminarProducto.setEnabled(false);
        }
    }//GEN-LAST:event_TB_CarritoMouseReleased

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_AgregarProducto;
    private javax.swing.JButton BT_Crear_CC;
    private javax.swing.JButton BT_EliminarProducto;
    private javax.swing.JButton BT_RealizarVenta;
    private javax.swing.JComboBox<String> CB_Cliente;
    private javax.swing.JComboBox<String> CB_Producto_AP;
    private javax.swing.JDialog JD_Crear_Cliente;
    private javax.swing.JLabel JD_Crear_Cliente_BG;
    private javax.swing.JLabel JL_ISV;
    private javax.swing.JLabel JL_Subtotal;
    private javax.swing.JLabel JL_Total;
    private javax.swing.JTable TB_Carrito;
    private javax.swing.JScrollPane TB_Carrito_Scrollpane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables

    private void Abrir_JDialog(JDialog JD) {
        JD.setModal(true);
        JD.pack();
        JD.setLocationRelativeTo(null);//this Frame
        JD.setVisible(true);
    }
    
    private void ActualizarCB(JComboBox jc, PreparedStatement ps){
        try{
            jc.removeAllItems();
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                jc.addItem(rs.getString("id") + " | " + rs.getString("nombre"));
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    private void cinco_mejores_tiendas(){
        try{
            PreparedStatement ps = db.getConexion().prepareStatement("SELECT * FROM mejores_cinco_tiendas");
            ResultSet rs = ps.executeQuery();
            
            String[] titles = {"#", "ID", "Nombre", "Venta" };
            DefaultTableModel tm = new DefaultTableModel(new String[][] {}, titles);
            while(rs.next()){
                PreparedStatement ps2 = db.getConexion().prepareStatement("SELECT nombre WHERE id="+rs.getInt("idTienda"));
                ResultSet rs2 = ps2.executeQuery(); rs2.next();
                String nombre = rs2.getString("nombre");
                String[] data = {
                    rs.getInt("Numero")+"",
                    rs.getString("idTienda"),
                    nombre,
                    rs.getDouble("idTienda")+""
                };
                tm.addRow(data);
            }
            T_MejoresTiendas.setModel(tm);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    private void mejores_veinte_productos_tienda(int idtienda){
        try{
            PreparedStatement ps = db.getConexion().prepareStatement("SELECT mejores_veinte_productos_tienda(?)");
            ps.setInt(1, idtienda);
            ResultSet rs = ps.executeQuery();
            String[] titles = {"UPC", "Nombre", "Cantidad Vendida"};
            DefaultTableModel model = new DefaultTableModel(new String[][]{}, titles);
            while(rs.next()){
                String[] row = {
                    rs.getString("upc"),
                    rs.getString("nombre"),
                    rs.getInt("cantidadVendida")+""
                };
                model.addRow(row);
            }
            TB_ProdMasVendidos.setModel(model);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    private void inventario_tienda(int idtienda){
        try{
            PreparedStatement ps = db.getConexion().prepareStatement("SELECT upcproducto,nombre,cantidad,precio FROM "
                    + "inventario_tienda WHERE idtienda="+idtienda);
            ResultSet rs = ps.executeQuery();
            String[] titles = {"UPC","Nombre","Cantidad","Precio"};
            DefaultTableModel model = new DefaultTableModel(new String[][]{},titles);
            while(rs.next()){
                String[] row = {
                    rs.getString("upcproducto"),
                    rs.getString("nombre"),
                    rs.getString("cantidad"),
                    rs.getString("precio")
                };
                model.addRow(row);
            }
            TB_Inventario.setModel(model);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    private void compras_por_cliente(int idcliente){
        try{
            PreparedStatement ps = db.getConexion().prepareStatement("SELECT fecha,numerofactura,tienda,total,cliente FROM compras_por_cliente WHERE idcliente="+idcliente);
            ResultSet rs = ps.executeQuery();
            String[] titles = {"Cliente","# Factura","Tienda","Fecha","Total"};
            DefaultTableModel model = new DefaultTableModel(new String[][]{},titles);
            while(rs.next()){
                String[] row = {
                    rs.getString("cliente"),
                    rs.getString("numerofactura"),
                    rs.getString("tienda"),
                    rs.getString("fecha"),
                    rs.getString("total")
                };
                model.addRow(row);
            }
            TB_ComprasPorCliente.setModel(model);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
}
